apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: local-kafka
  labels:
    app: local-kafka
spec:
  serviceName: local-kafka
  replicas: 1
  selector:
    matchLabels:
      app: local-kafka
  template:
    metadata:
      labels:
        app: local-kafka
    spec:
      containers:
      - name: local-kafka
        image: confluentinc/cp-kafka:5.3.1
        command: [ "bash", "-c"]
        args:
        - export KAFKA_ADVERTISED_LISTENERS="PLAINTEXT://${HOSTNAME}.local-kafka.default:9092";
          export KAFKA_BROKER_ID="$((${HOSTNAME//[!0-9]/}+1))";
          /etc/confluent/docker/run;
        imagePullPolicy: Always
        ports:
        - containerPort: 9092
          name: client
        resources:
          limits:
            cpu: "500m"
            memory: 1Gi
          requests:
            cpu: "500m"
            memory: 1Gi
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
        env:
          - name: KAFKA_LISTENER
            value: "PLAINTEXT://9092"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "local-zookeeper-0.local-zookeeper.default:2181" # ,local-zookeeper-1.local-zookeeper.default:2181,local-zookeeper-2.local-zookeeper.default:2181"
          - name: KAFKA_LOG_DIR
            value: "/kafka_data/data"
          - name: KAFKA_LOG_DIRS
            value: "/kafka_data/data"
          - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
            value: "1"
        readinessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 15
          timeoutSeconds: 5
        volumeMounts:
        - name: kafka-data
          mountPath: /kafka_data
  volumeClaimTemplates:
  - metadata:
      name: kafka-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: fast
      resources:
        requests:
          storage: 1Gi
